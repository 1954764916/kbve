name: CI - Main

on:
    workflow_dispatch:
    push:
         branches:
             - main

concurrency:
    group: "pages"
    cancel-in-progress: true


jobs:
    alter:
        runs-on: ubuntu-latest
        name: File Alterations
        outputs:
            herbmail:  ${{ steps.delta.outputs.herbmail_any_changed  }}
            kbve: ${{ steps.delta.outputs.kbve_all_changed_files }}
            rareicon: ${{ steps.delta.outputs.rareicon_all_changed_files }}
            discordsh: ${{ steps.delta.outputs.discordsh_all_changed_files }}
            atlas: ${{ steps.delta.outputs.atlas_any_changed  }}

        steps:
            -   name: Checkout the repository using git
                uses: actions/checkout@v4
                with:
                    fetch-depth: 1
            
            -   name: File Changes
                id: delta
                uses: tj-actions/changed-files@v39
                with:
                  files_yaml: |
                    herbmail:
                        - 'apps/herbmail.com/**'
                    kbve: 
                        - 'apps/kbve.com/**'
                    rareicon:
                        - 'apps/rareicon.com/**'
                    discordsh:
                        - 'apps/discord.sh/**'
                    atlas:
                        - 'apps/atlas/kbve_atlas/**'


    deploy:
        needs: alter
        name: Deployment
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout the repository using git
                uses: actions/checkout@v4
            
            -   name: Setup Node v18
                uses: actions/setup-node@v3
                with:
                    node-version: 18

            -   name: Setup pnpm
                uses: pnpm/action-setup@v2
                with:
                    version: 8

            -   name: Install pnpm dependencies
                run: pnpm install

            -   name: Generate NX Report
                shell: bash
                run: |
                    pnpm nx report

            #   [HerbMail]

            -   name: HerbMail -> Build
                if: needs.alter.outputs.herbmail == 'true'
                shell: bash
                run: |
                    pnpm nx build herbmail.com
    
            -   name: HerbMail -> Deployment
                if: needs.alter.outputs.herbmail == 'true'
                uses: dobbelina/copy_file_to_another_repo_action@main
                env:
                    API_TOKEN_GITHUB: ${{ secrets.UNITY_PAT }}
                with:
                    source_file: 'dist/apps/herbmail.com/'
                    destination_repo: 'kbve/herbmail.com'
                    destination_folder: '/docs'
                    destination_branch: 'main'
                    destination_branch_create: 'patch-herbmail-deploy'
                    user_email: '5599058+h0lybyte@users.noreply.github.com'
                    user_name: 'h0lybyte'
                    commit_message: ${{ github.event.head_commit.message }}
                    rsync_option: "-avrh --delete"
            
            #   [ATLAS]

            -   name: Python Install
                if: needs.alter.outputs.atlas == 'true'
                uses: actions/setup-python@v4
                with:
                  python-version: "3.x"
            
            -   name: Poetry Install
                if: needs.alter.outputs.atlas == 'true'
                uses: snok/install-poetry@v1

            -   name: Atlas Build
                if: needs.alter.outputs.atlas == 'true'
                shell: bash
                run: |
                    pnpm nx build atlas
            
            -   name: Store the Atlas distribution packages
                if: needs.alter.outputs.atlas== 'true'
                uses: actions/upload-artifact@v3
                with:
                    name: atlas-python-package-distributions
                    path: apps/atlas/dist/
    


    pypublish:
        needs: ["deploy", "alter"]
        name: Pypi Publish
        if: needs.alter.outputs.atlas == 'true'
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/kbve
        permissions:
            id-token: write 
        steps:
            -   name: Download all the dists
                uses: actions/download-artifact@v3
                with:
                    name: atlas-python-package-distributions
                    path: dist/
            -   name: Publish distribution ðŸ“¦ to PyPI
                uses: pypa/gh-action-pypi-publish@release/v1
                with:
                    user: __token__
                    password: ${{ secrets.PYPI_API_TOKEN }}
